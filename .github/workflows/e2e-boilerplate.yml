name: e2e-boilerplate

env:
  NODE_OPTIONS: --max-old-space-size=6144

on:
  schedule:
    - cron: '0 */4 * * *'
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    types:
      - 'opened'
      - 'synchronize'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  e2e-boilerplate:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org/'

      - name: Setup Global Cypress-cache-folder in Windows
        if: matrix.os == 'windows-latest'
        run: echo "CYPRESS_CACHE_FOLDER=${HOME}\.cache\Cypress"  >> $env:GITHUB_ENV

      # We use week in the turbo cache key to keep the cache from infinitely growing
      - name: Get cache expires mark
        id: get-week
        run: echo ::set-output name=WEEK::$(date +%U)

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ runner.os }}-node${{ matrix.node-version }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ runner.os }}-node${{ matrix.node-version }}-
            turbo-${{ github.job }}-${{ runner.os }}-node${{ matrix.node-version }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-node-e2e-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-node-e2e-

      - name: Install dependencies
        run: pnpm i

      - name: Build targets
        run: pnpm umi-scripts turbo build 
          --filter ./examples/create-umi-simple... 
          --filter ./examples/create-umi-pro/... 
          --filter ./examples/antd-pro-create/... 
          --filter ./packages/umi/...
          --filter ./packages/max/...
          --filter ./packages/preset-vue/...

      - name: e2e:example:create-umi-simple:dev
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          working-directory: ./examples/create-umi-simple
          install: false
          install-command: pnpm i cypress
          command: npm run e2e:dev:ci
        env:
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_KEY}}

      - name: e2e:example:create-umi-simple
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          working-directory: ./examples/create-umi-simple
          install: false
          install-command: pnpm i cypress
          command: npm run e2e:ci
        env:
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_KEY}}

      - name: e2e:example:create-umi-pro:dev
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          working-directory: ./examples/create-umi-pro
          install: false
          install-command: pnpm i cypress
          command: npm run e2e:dev:ci
        env:
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_KEY}}

      - name: e2e:example:create-umi-pro
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          working-directory: ./examples/create-umi-pro
          install: false
          install-command: pnpm i cypress
          command: npm run e2e:ci
        env:
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_KEY}}

      - name: e2e:example:antd-pro-create:dev
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          working-directory: ./examples/antd-pro-create
          install: false
          install-command: pnpm i cypress
          command: npm run e2e:dev:ci
        env:
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_KEY}}

      - name: e2e:example:boilerplate-vue
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          working-directory: ./examples/boilerplate-vue
          install: false
          install-command: pnpm i cypress
          command: npm run e2e:ci
        env:
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_KEY}}

      - name: Notify Contributor Group
        if: ${{ failure() && github.event.schedule == '0 */4 * * *' }}
        uses: zcong1993/actions-ding@master
        with:
          dingToken: ${{ secrets.DING_TOKEN }}
          body: ${{ format('{{"msgtype":"link","link":{{"text":"哪位好心人来看看吧!","title":"Umi CI E2E 测试失败({1})","picUrl":"","messageUrl":"https://github.com/umijs/umi/actions/runs/{0}"}}}}', github.run_id, matrix.os )}}
