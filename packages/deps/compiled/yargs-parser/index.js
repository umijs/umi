module.exports=(()=>{var s={362:s=>{"use strict";const n=s=>{let n=false;let t=false;let e=false;for(let c=0;c<s.length;c++){const r=s[c];if(n&&/[a-zA-Z]/.test(r)&&r.toUpperCase()===r){s=s.slice(0,c)+"-"+s.slice(c);n=false;e=t;t=true;c++}else if(t&&e&&/[a-zA-Z]/.test(r)&&r.toLowerCase()===r){s=s.slice(0,c-1)+"-"+s.slice(c-1);e=t;t=false;n=true}else{n=r.toLowerCase()===r&&r.toUpperCase()!==r;e=t;t=r.toUpperCase()===r&&r.toLowerCase()!==r}}return s};const t=(s,t)=>{if(!(typeof s==="string"||Array.isArray(s))){throw new TypeError("Expected the input to be `string | string[]`")}t=Object.assign({pascalCase:false},t);const e=s=>t.pascalCase?s.charAt(0).toUpperCase()+s.slice(1):s;if(Array.isArray(s)){s=s.map(s=>s.trim()).filter(s=>s.length).join("-")}else{s=s.trim()}if(s.length===0){return""}if(s.length===1){return t.pascalCase?s.toUpperCase():s.toLowerCase()}const c=s!==s.toLowerCase();if(c){s=n(s)}s=s.replace(/^[_.\- ]+/,"").toLowerCase().replace(/[_.\- ]+(\w|$)/g,(s,n)=>n.toUpperCase()).replace(/\d+(\w|$)/g,s=>s.toUpperCase());return e(s)};s.exports=t;s.exports.default=t},159:s=>{"use strict";s.exports=function(s,n){if(typeof s!=="string"){throw new TypeError("Expected a string")}n=typeof n==="undefined"?"_":n;return s.replace(/([a-z\d])([A-Z])/g,"$1"+n+"$2").replace(/([A-Z]+)([A-Z][a-z\d]+)/g,"$1"+n+"$2").toLowerCase()}},246:(s,n,t)=>{const e=t(362);const c=t(159);const r=t(622);const l=t(433);const o=t(669);function parse(s,n){n=Object.assign(Object.create(null),n);s=l(s);const t=combineAliases(Object.assign(Object.create(null),n.alias));const f=Object.assign({"boolean-negation":true,"camel-case-expansion":true,"combine-arrays":false,"dot-notation":true,"duplicate-arguments-array":true,"flatten-duplicate-arrays":true,"greedy-arrays":true,"halt-at-non-option":false,"nargs-eats-options":false,"negation-prefix":"no-","parse-numbers":true,"populate--":false,"set-placeholder-key":false,"short-option-groups":true,"strip-aliased":false,"strip-dashed":false,"unknown-options-as-args":false},n.configuration);const a=Object.assign(Object.create(null),n.default);const i=n.configObjects||[];const u=n.envPrefix;const h=f["populate--"];const A=h?"--":"_";const p=Object.create(null);const d=Object.create(null);const b=n.__||o.format;const O={aliases:Object.create(null),arrays:Object.create(null),bools:Object.create(null),strings:Object.create(null),numbers:Object.create(null),counts:Object.create(null),normalize:Object.create(null),configs:Object.create(null),nargs:Object.create(null),coercions:Object.create(null),keys:[]};const m=/^-([0-9]+(\.[0-9]+)?|\.[0-9]+)$/;const E=new RegExp("^--"+f["negation-prefix"]+"(.+)");[].concat(n.array).filter(Boolean).forEach(function(s){const n=s.key||s;const t=Object.keys(s).map(function(s){return{boolean:"bools",string:"strings",number:"numbers"}[s]}).filter(Boolean).pop();if(t){O[t][n]=true}O.arrays[n]=true;O.keys.push(n)});[].concat(n.boolean).filter(Boolean).forEach(function(s){O.bools[s]=true;O.keys.push(s)});[].concat(n.string).filter(Boolean).forEach(function(s){O.strings[s]=true;O.keys.push(s)});[].concat(n.number).filter(Boolean).forEach(function(s){O.numbers[s]=true;O.keys.push(s)});[].concat(n.count).filter(Boolean).forEach(function(s){O.counts[s]=true;O.keys.push(s)});[].concat(n.normalize).filter(Boolean).forEach(function(s){O.normalize[s]=true;O.keys.push(s)});Object.keys(n.narg||{}).forEach(function(s){O.nargs[s]=n.narg[s];O.keys.push(s)});Object.keys(n.coerce||{}).forEach(function(s){O.coercions[s]=n.coerce[s];O.keys.push(s)});if(Array.isArray(n.config)||typeof n.config==="string"){[].concat(n.config).filter(Boolean).forEach(function(s){O.configs[s]=true})}else{Object.keys(n.config||{}).forEach(function(s){O.configs[s]=n.config[s]})}extendAliases(n.key,t,n.default,O.arrays);Object.keys(a).forEach(function(s){(O.aliases[s]||[]).forEach(function(n){a[n]=a[s]})});let _=null;checkConfiguration();let w=[];const j=Object.assign(Object.create(null),{_:[]});const N={};for(let n=0;n<s.length;n++){const t=s[n];let e;let c;let r;let l;let o;let a;if(t!=="--"&&isUnknownOptionAsArg(t)){j._.push(t)}else if(t.match(/^--.+=/)||!f["short-option-groups"]&&t.match(/^-.+=/)){l=t.match(/^--?([^=]+)=([\s\S]*)$/);if(checkAllAliases(l[1],O.arrays)){n=eatArray(n,l[1],s,l[2])}else if(checkAllAliases(l[1],O.nargs)!==false){n=eatNargs(n,l[1],s,l[2])}else{setArg(l[1],l[2])}}else if(t.match(E)&&f["boolean-negation"]){c=t.match(E)[1];setArg(c,checkAllAliases(c,O.arrays)?[false]:false)}else if(t.match(/^--.+/)||!f["short-option-groups"]&&t.match(/^-[^-]+/)){c=t.match(/^--?(.+)/)[1];if(checkAllAliases(c,O.arrays)){n=eatArray(n,c,s)}else if(checkAllAliases(c,O.nargs)!==false){n=eatNargs(n,c,s)}else{o=s[n+1];if(o!==undefined&&(!o.match(/^-/)||o.match(m))&&!checkAllAliases(c,O.bools)&&!checkAllAliases(c,O.counts)){setArg(c,o);n++}else if(/^(true|false)$/.test(o)){setArg(c,o);n++}else{setArg(c,defaultValue(c))}}}else if(t.match(/^-.\..+=/)){l=t.match(/^-([^=]+)=([\s\S]*)$/);setArg(l[1],l[2])}else if(t.match(/^-.\..+/)&&!t.match(m)){o=s[n+1];c=t.match(/^-(.\..+)/)[1];if(o!==undefined&&!o.match(/^-/)&&!checkAllAliases(c,O.bools)&&!checkAllAliases(c,O.counts)){setArg(c,o);n++}else{setArg(c,defaultValue(c))}}else if(t.match(/^-[^-]+/)&&!t.match(m)){r=t.slice(1,-1).split("");e=false;for(let l=0;l<r.length;l++){o=t.slice(l+2);if(r[l+1]&&r[l+1]==="="){a=t.slice(l+3);c=r[l];if(checkAllAliases(c,O.arrays)){n=eatArray(n,c,s,a)}else if(checkAllAliases(c,O.nargs)!==false){n=eatNargs(n,c,s,a)}else{setArg(c,a)}e=true;break}if(o==="-"){setArg(r[l],o);continue}if(/[A-Za-z]/.test(r[l])&&/^-?\d+(\.\d*)?(e-?\d+)?$/.test(o)){setArg(r[l],o);e=true;break}if(r[l+1]&&r[l+1].match(/\W/)){setArg(r[l],o);e=true;break}else{setArg(r[l],defaultValue(r[l]))}}c=t.slice(-1)[0];if(!e&&c!=="-"){if(checkAllAliases(c,O.arrays)){n=eatArray(n,c,s)}else if(checkAllAliases(c,O.nargs)!==false){n=eatNargs(n,c,s)}else{o=s[n+1];if(o!==undefined&&(!/^(-|--)[^-]/.test(o)||o.match(m))&&!checkAllAliases(c,O.bools)&&!checkAllAliases(c,O.counts)){setArg(c,o);n++}else if(/^(true|false)$/.test(o)){setArg(c,o);n++}else{setArg(c,defaultValue(c))}}}}else if(t.match(/^-[0-9]$/)&&t.match(m)&&checkAllAliases(t.slice(1),O.bools)){c=t.slice(1);setArg(c,defaultValue(c))}else if(t==="--"){w=s.slice(n+1);break}else if(f["halt-at-non-option"]){w=s.slice(n);break}else{j._.push(maybeCoerceNumber("_",t))}}applyEnvVars(j,true);applyEnvVars(j,false);setConfig(j);setConfigObjects();applyDefaultsAndAliases(j,O.aliases,a,true);applyCoercions(j);if(f["set-placeholder-key"])setPlaceholderKeys(j);Object.keys(O.counts).forEach(function(s){if(!hasKey(j,s.split(".")))setArg(s,0)});if(h&&w.length)j[A]=[];w.forEach(function(s){j[A].push(s)});if(f["camel-case-expansion"]&&f["strip-dashed"]){Object.keys(j).filter(s=>s!=="--"&&s.includes("-")).forEach(s=>{delete j[s]})}if(f["strip-aliased"]){[].concat(...Object.keys(t).map(s=>t[s])).forEach(s=>{if(f["camel-case-expansion"]){delete j[s.split(".").map(s=>e(s)).join(".")]}delete j[s]})}function eatNargs(s,n,t,e){let c;let r=checkAllAliases(n,O.nargs);r=isNaN(r)?1:r;if(r===0){if(!isUndefined(e)){_=Error(b("Argument unexpected for: %s",n))}setArg(n,defaultValue(n));return s}let l=isUndefined(e)?0:1;if(f["nargs-eats-options"]){if(t.length-(s+1)+l<r){_=Error(b("Not enough arguments following: %s",n))}l=r}else{for(c=s+1;c<t.length;c++){if(!t[c].match(/^-[^0-9]/)||t[c].match(m)||isUnknownOptionAsArg(t[c]))l++;else break}if(l<r)_=Error(b("Not enough arguments following: %s",n))}let o=Math.min(l,r);if(!isUndefined(e)&&o>0){setArg(n,e);o--}for(c=s+1;c<o+s+1;c++){setArg(n,t[c])}return s+o}function eatArray(s,n,t,e){let c=[];let r=e||t[s+1];const l=checkAllAliases(n,O.nargs);if(checkAllAliases(n,O.bools)&&!/^(true|false)$/.test(r)){c.push(true)}else if(isUndefined(r)||isUndefined(e)&&/^-/.test(r)&&!m.test(r)&&!isUnknownOptionAsArg(r)){if(a[n]!==undefined){const s=a[n];c=Array.isArray(s)?s:[s]}}else{if(!isUndefined(e)){c.push(processValue(n,e))}for(let e=s+1;e<t.length;e++){if(!f["greedy-arrays"]&&c.length>0||l&&c.length>=l)break;r=t[e];if(/^-/.test(r)&&!m.test(r)&&!isUnknownOptionAsArg(r))break;s=e;c.push(processValue(n,r))}}if(l&&c.length<l||isNaN(l)&&c.length===0){_=Error(b("Not enough arguments following: %s",n))}setArg(n,c);return s}function setArg(s,n){if(/-/.test(s)&&f["camel-case-expansion"]){const n=s.split(".").map(function(s){return e(s)}).join(".");addNewAlias(s,n)}const t=processValue(s,n);const c=s.split(".");setKey(j,c,t);if(O.aliases[s]){O.aliases[s].forEach(function(s){s=s.split(".");setKey(j,s,t)})}if(c.length>1&&f["dot-notation"]){(O.aliases[c[0]]||[]).forEach(function(n){n=n.split(".");const e=[].concat(c);e.shift();n=n.concat(e);if(!(O.aliases[s]||[]).includes(n.join("."))){setKey(j,n,t)}})}if(checkAllAliases(s,O.normalize)&&!checkAllAliases(s,O.arrays)){const t=[s].concat(O.aliases[s]||[]);t.forEach(function(s){Object.defineProperty(N,s,{enumerable:true,get(){return n},set(s){n=typeof s==="string"?r.normalize(s):s}})})}}function addNewAlias(s,n){if(!(O.aliases[s]&&O.aliases[s].length)){O.aliases[s]=[n];p[n]=true}if(!(O.aliases[n]&&O.aliases[n].length)){addNewAlias(n,s)}}function processValue(s,n){if(typeof n==="string"&&(n[0]==="'"||n[0]==='"')&&n[n.length-1]===n[0]){n=n.substring(1,n.length-1)}if(checkAllAliases(s,O.bools)||checkAllAliases(s,O.counts)){if(typeof n==="string")n=n==="true"}let t=Array.isArray(n)?n.map(function(n){return maybeCoerceNumber(s,n)}):maybeCoerceNumber(s,n);if(checkAllAliases(s,O.counts)&&(isUndefined(t)||typeof t==="boolean")){t=increment}if(checkAllAliases(s,O.normalize)&&checkAllAliases(s,O.arrays)){if(Array.isArray(n))t=n.map(r.normalize);else t=r.normalize(n)}return t}function maybeCoerceNumber(s,n){if(!checkAllAliases(s,O.strings)&&!checkAllAliases(s,O.bools)&&!Array.isArray(n)){const t=isNumber(n)&&f["parse-numbers"]&&Number.isSafeInteger(Math.floor(n));if(t||!isUndefined(n)&&checkAllAliases(s,O.numbers))n=Number(n)}return n}function setConfig(s){const n=Object.create(null);applyDefaultsAndAliases(n,O.aliases,a);Object.keys(O.configs).forEach(function(t){const e=s[t]||n[t];if(e){try{let n=null;const c=r.resolve(process.cwd(),e);if(typeof O.configs[t]==="function"){try{n=O.configs[t](c)}catch(s){n=s}if(n instanceof Error){_=n;return}}else{n=require(c)}setConfigObject(n)}catch(n){if(s[t])_=Error(b("Invalid JSON config file: %s",e))}}})}function setConfigObject(s,n){Object.keys(s).forEach(function(t){const e=s[t];const c=n?n+"."+t:t;if(typeof e==="object"&&e!==null&&!Array.isArray(e)&&f["dot-notation"]){setConfigObject(e,c)}else{if(!hasKey(j,c.split("."))||checkAllAliases(c,O.arrays)&&f["combine-arrays"]){setArg(c,e)}}})}function setConfigObjects(){if(typeof i==="undefined")return;i.forEach(function(s){setConfigObject(s)})}function applyEnvVars(s,n){if(typeof u==="undefined")return;const t=typeof u==="string"?u:"";Object.keys(process.env).forEach(function(c){if(t===""||c.lastIndexOf(t,0)===0){const r=c.split("__").map(function(s,n){if(n===0){s=s.substring(t.length)}return e(s)});if((n&&O.configs[r.join(".")]||!n)&&!hasKey(s,r)){setArg(r.join("."),process.env[c])}}})}function applyCoercions(s){let n;const t=new Set;Object.keys(s).forEach(function(e){if(!t.has(e)){n=checkAllAliases(e,O.coercions);if(typeof n==="function"){try{const c=maybeCoerceNumber(e,n(s[e]));[].concat(O.aliases[e]||[],e).forEach(n=>{t.add(n);s[n]=c})}catch(s){_=s}}}})}function setPlaceholderKeys(s){O.keys.forEach(n=>{if(~n.indexOf("."))return;if(typeof s[n]==="undefined")s[n]=undefined});return s}function applyDefaultsAndAliases(s,n,t,e=false){Object.keys(t).forEach(function(c){if(!hasKey(s,c.split("."))){setKey(s,c.split("."),t[c]);if(e)d[c]=true;(n[c]||[]).forEach(function(n){if(hasKey(s,n.split(".")))return;setKey(s,n.split("."),t[c])})}})}function hasKey(s,n){let t=s;if(!f["dot-notation"])n=[n.join(".")];n.slice(0,-1).forEach(function(s){t=t[s]||{}});const e=n[n.length-1];if(typeof t!=="object")return false;else return e in t}function setKey(s,n,t){let e=s;if(!f["dot-notation"])n=[n.join(".")];n.slice(0,-1).forEach(function(s,n){s=sanitizeKey(s);if(typeof e==="object"&&e[s]===undefined){e[s]={}}if(typeof e[s]!=="object"||Array.isArray(e[s])){if(Array.isArray(e[s])){e[s].push({})}else{e[s]=[e[s],{}]}e=e[s][e[s].length-1]}else{e=e[s]}});const c=sanitizeKey(n[n.length-1]);const r=checkAllAliases(n.join("."),O.arrays);const l=Array.isArray(t);let o=f["duplicate-arguments-array"];if(!o&&checkAllAliases(c,O.nargs)){o=true;if(!isUndefined(e[c])&&O.nargs[c]===1||Array.isArray(e[c])&&e[c].length===O.nargs[c]){e[c]=undefined}}if(t===increment){e[c]=increment(e[c])}else if(Array.isArray(e[c])){if(o&&r&&l){e[c]=f["flatten-duplicate-arrays"]?e[c].concat(t):(Array.isArray(e[c][0])?e[c]:[e[c]]).concat([t])}else if(!o&&Boolean(r)===Boolean(l)){e[c]=t}else{e[c]=e[c].concat([t])}}else if(e[c]===undefined&&r){e[c]=l?t:[t]}else if(o&&!(e[c]===undefined||checkAllAliases(c,O.counts)||checkAllAliases(c,O.bools))){e[c]=[e[c],t]}else{e[c]=t}}function extendAliases(...s){s.forEach(function(s){Object.keys(s||{}).forEach(function(s){if(O.aliases[s])return;O.aliases[s]=[].concat(t[s]||[]);O.aliases[s].concat(s).forEach(function(n){if(/-/.test(n)&&f["camel-case-expansion"]){const t=e(n);if(t!==s&&O.aliases[s].indexOf(t)===-1){O.aliases[s].push(t);p[t]=true}}});O.aliases[s].concat(s).forEach(function(n){if(n.length>1&&/[A-Z]/.test(n)&&f["camel-case-expansion"]){const t=c(n,"-");if(t!==s&&O.aliases[s].indexOf(t)===-1){O.aliases[s].push(t);p[t]=true}}});O.aliases[s].forEach(function(n){O.aliases[n]=[s].concat(O.aliases[s].filter(function(s){return n!==s}))})})})}function checkAllAliases(s,n){const t=[].concat(O.aliases[s]||[],s);const e=Object.keys(n);const c=t.find(s=>e.includes(s));return c?n[c]:false}function hasAnyFlag(s){const n=[].concat(Object.keys(O).map(s=>O[s]));return n.some(function(n){return Array.isArray(n)?n.includes(s):n[s]})}function hasFlagsMatching(s,...n){const t=[].concat(...n);return t.some(function(n){const t=s.match(n);return t&&hasAnyFlag(t[1])})}function hasAllShortFlags(s){if(s.match(m)||!s.match(/^-[^-]+/)){return false}let n=true;let t;const e=s.slice(1).split("");for(let c=0;c<e.length;c++){t=s.slice(c+2);if(!hasAnyFlag(e[c])){n=false;break}if(e[c+1]&&e[c+1]==="="||t==="-"||/[A-Za-z]/.test(e[c])&&/^-?\d+(\.\d*)?(e-?\d+)?$/.test(t)||e[c+1]&&e[c+1].match(/\W/)){break}}return n}function isUnknownOptionAsArg(s){return f["unknown-options-as-args"]&&isUnknownOption(s)}function isUnknownOption(s){if(s.match(m)){return false}if(hasAllShortFlags(s)){return false}const n=/^-+([^=]+?)=[\s\S]*$/;const t=/^-+([^=]+?)$/;const e=/^-+([^=]+?)-$/;const c=/^-+([^=]+?\d+)$/;const r=/^-+([^=]+?)\W+.*$/;return!hasFlagsMatching(s,n,E,t,e,c,r)}function defaultValue(s){if(!checkAllAliases(s,O.bools)&&!checkAllAliases(s,O.counts)&&`${s}`in a){return a[s]}else{return defaultForType(guessType(s))}}function defaultForType(s){const n={boolean:true,string:"",number:undefined,array:[]};return n[s]}function guessType(s){let n="boolean";if(checkAllAliases(s,O.strings))n="string";else if(checkAllAliases(s,O.numbers))n="number";else if(checkAllAliases(s,O.bools))n="boolean";else if(checkAllAliases(s,O.arrays))n="array";return n}function isNumber(s){if(s===null||s===undefined)return false;if(typeof s==="number")return true;if(/^0x[0-9a-f]+$/i.test(s))return true;if(s.length>1&&s[0]==="0")return false;return/^[-]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(s)}function isUndefined(s){return s===undefined}function checkConfiguration(){Object.keys(O.counts).find(s=>{if(checkAllAliases(s,O.arrays)){_=Error(b("Invalid configuration: %s, opts.count excludes opts.array.",s));return true}else if(checkAllAliases(s,O.nargs)){_=Error(b("Invalid configuration: %s, opts.count excludes opts.narg.",s));return true}})}return{argv:Object.assign(N,j),error:_,aliases:Object.assign({},O.aliases),newAliases:Object.assign({},p),defaulted:Object.assign({},d),configuration:f}}function combineAliases(s){const n=[];const t=Object.create(null);let e=true;Object.keys(s).forEach(function(t){n.push([].concat(s[t],t))});while(e){e=false;for(let s=0;s<n.length;s++){for(let t=s+1;t<n.length;t++){const c=n[s].filter(function(s){return n[t].indexOf(s)!==-1});if(c.length){n[s]=n[s].concat(n[t]);n.splice(t,1);e=true;break}}}}n.forEach(function(s){s=s.filter(function(s,n,t){return t.indexOf(s)===n});t[s.pop()]=s});return t}function increment(s){return s!==undefined?s+1:1}function Parser(s,n){const t=parse(s.slice(),n);return t.argv}Parser.detailed=function(s,n){return parse(s.slice(),n)};function sanitizeKey(s){if(s==="__proto__")return"___proto___";return s}s.exports=Parser},433:s=>{s.exports=function(s){if(Array.isArray(s)){return s.map(s=>typeof s!=="string"?s+"":s)}s=s.trim();let n=0;let t=null;let e=null;let c=null;const r=[];for(let l=0;l<s.length;l++){t=e;e=s.charAt(l);if(e===" "&&!c){if(!(t===" ")){n++}continue}if(e===c){c=null}else if((e==="'"||e==='"')&&!c){c=e}if(!r[n])r[n]="";r[n]+=e}return r}},622:s=>{"use strict";s.exports=require("path")},669:s=>{"use strict";s.exports=require("util")}};var n={};function __nccwpck_require__(t){if(n[t]){return n[t].exports}var e=n[t]={exports:{}};var c=true;try{s[t](e,e.exports,__nccwpck_require__);c=false}finally{if(c)delete n[t]}return e.exports}__nccwpck_require__.ab=__dirname+"/";return __nccwpck_require__(246)})();