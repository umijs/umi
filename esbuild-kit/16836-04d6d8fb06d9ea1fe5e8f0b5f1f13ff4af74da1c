{"code":"(()=>{\n\"use strict\";var import_fs=require(\"fs\");var import_path=require(\"path\");var import_constants=require(\"./.internal/constants\");const GRACEFUL_FS_TO_REPLACE=`if(j.uid<0)j.uid+=4294967296;if(j.gid<0)j.gid+=4294967296;`;const replaces=[[\"[node-graceful-fs]\",GRACEFUL_FS_TO_REPLACE,`/*${GRACEFUL_FS_TO_REPLACE}*//*PATCHED*/`],[\"[esm]\",'esm=entry.endsWith(\".mjs\")||!entry.endsWith(\".cjs\")&&hasTypeModule(entry)',\"esm=false/*PATCHED*/\"]];console.log(\"patch ncc\");const path=(0,import_path.join)(import_constants.PATHS.ROOT,\"./node_modules/@vercel/ncc/dist/ncc/index.js.cache.js\");const content=(0,import_fs.readFileSync)(path,\"utf-8\");let ret=content;for(const replace of replaces){if(ret.includes(replace[2])){console.log(`${replace[0]} already patched`)}else{console.log(`${replace[0]} patching`);ret=ret.replace(replace[1],replace[2])}}(0,import_fs.writeFileSync)(path,ret,\"utf-8\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAAA,cAA4C,cAC5C,gBAAqB,gBACrB,qBAAsB,iCAGtB,MAAM,uBAAyB,6DAC/B,MAAM,SAAW,CAEf,CACE,qBACA,uBACA,KAAK,qCACP,EAGA,CACE,QACA,4EACA,sBACF,CACF,EAEA,QAAQ,IAAI,WAAW,EACvB,MAAM,QAAO,kBACX,uBAAM,KACN,uDACF,EACA,MAAM,WAAU,wBAAa,KAAM,OAAO,EAC1C,IAAI,IAAM,QACV,UAAW,WAAW,SAAU,CAC9B,GAAI,IAAI,SAAS,QAAQ,EAAE,EAAG,CAC5B,QAAQ,IAAI,GAAG,QAAQ,oBAAoB,CAC7C,KAAO,CACL,QAAQ,IAAI,GAAG,QAAQ,aAAa,EACpC,IAAM,IAAI,QAAQ,QAAQ,GAAI,QAAQ,EAAE,CAC1C,CACF,IACA,yBAAc,KAAM,IAAK,OAAO","names":[],"sources":["/Users/yuyuehui/umi/scripts/postinstall.ts"],"sourcesContent":["import { readFileSync, writeFileSync } from 'fs';\nimport { join } from 'path';\nimport { PATHS } from './.internal/constants';\n\n// ref: https://github.com/isaacs/node-graceful-fs/commit/e61a20a052b838f420b98195c232a824a6ac04ee\nconst GRACEFUL_FS_TO_REPLACE = `if(j.uid<0)j.uid+=4294967296;if(j.gid<0)j.gid+=4294967296;`;\nconst replaces = [\n  // j is undefined when accessing .uid property\n  [\n    '[node-graceful-fs]',\n    GRACEFUL_FS_TO_REPLACE,\n    `/*${GRACEFUL_FS_TO_REPLACE}*//*PATCHED*/`,\n  ],\n  // when bundle pure esm package e.g. chalk@5\n  // ncc will set esm to true, which will cause the error\n  [\n    '[esm]',\n    'esm=entry.endsWith(\".mjs\")||!entry.endsWith(\".cjs\")&&hasTypeModule(entry)',\n    'esm=false/*PATCHED*/',\n  ],\n];\n\nconsole.log('patch ncc');\nconst path = join(\n  PATHS.ROOT,\n  './node_modules/@vercel/ncc/dist/ncc/index.js.cache.js',\n);\nconst content = readFileSync(path, 'utf-8');\nlet ret = content;\nfor (const replace of replaces) {\n  if (ret.includes(replace[2])) {\n    console.log(`${replace[0]} already patched`);\n  } else {\n    console.log(`${replace[0]} patching`);\n    ret = ret.replace(replace[1], replace[2]);\n  }\n}\nwriteFileSync(path, ret, 'utf-8');\n"]}}